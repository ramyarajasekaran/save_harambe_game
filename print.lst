


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000 00000000 
                       decCnt  EQU              0
   12 00000000 00000000 
                       fixCnt  EQU              0
   13 00000000 0000002A 
                       star    EQU              42
   14 00000000 0000002E 
                       dot     EQU              46
   15 00000000 00000000 
                       counter EQU              0
   16 00000000 20007000 
                       string  EQU              0x20007000
   17 00000000                 IMPORT           ST7735_OutChar
   18 00000000                 IMPORT           ST7735_OutString
   19 00000000                 EXPORT           LCD_OutDec
   20 00000000                 EXPORT           LCD_OutFix
   21 00000000         
   22 00000000         
   23 00000000         
   24 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   25 00000000                 preserve8
   26 00000000                 THUMB
   27 00000000         
   28 00000000         
   29 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   30 00000000         ; Output a 32-bit number in unsigned decimal format
   31 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   32 00000000         ; Output: none
   33 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   34 00000000         LCD_OutDec
   35 00000000 B530            PUSH{LR,R4,R5}
   36 00000002         ;create local variable
   37 00000002 B081            SUB              SP, #4      ; allocating space 
                                                            
   38 00000004 466D            MOV              R5, SP      ; R5 is the frame p
                                                            ointer
   39 00000006         
   40 00000006 F04F 0100       MOV              R1, #0      ;storing the local 
                                                            variable counter on
                                                             the stack
   41 0000000A 6029            STR              R1, [R5]
   42 0000000C         



ARM Macro Assembler    Page 2 


   43 0000000C         ;Make this a local variable
   44 0000000C F04F 020A       MOV              R2, #10     ;R2= 10= DIVISOR
   45 00000010         
   46 00000010 2800            CMP              R0, #0
   47 00000012 D104            BNE              ODloop
   48 00000014 F100 0030       ADD              R0, #0x30
   49 00000018 F7FF FFFE       BL               ST7735_OutChar
   50 0000001C E013            B                done
   51 0000001E         
   52 0000001E         ODloop
   53 0000001E FBB0 F1F2       UDIV             R1, R0, R2  ; R1= (N+R)/10,R/10
                                                            =0
   54 00000022 FB01 F102       MUL              R1, R1, R2  ; R1= N/10*10
   55 00000026 EBA0 0101       SUB              R1, R0, R1  ;  R1= N- (R1= N/10
                                                            *10) OR N%10
   56 0000002A B402            PUSH             {R1}
   57 0000002C FBB0 F0F2       UDIV             R0,R0,R2    ; N = N/10
   58 00000030 2800            CMP              R0,#0
   59 00000032 D000            BEQ              ODout
   60 00000034 E7F3            B                ODloop
   61 00000036         
   62 00000036         
   63 00000036         ODout
   64 00000036 45AD            CMP              SP, R5
   65 00000038 D005            BEQ              done        ; stack is empty if
                                                             SP == R5
   66 0000003A BC01            POP{R0}
   67 0000003C F100 0030       ADD              R0,#0x30
   68 00000040 F7FF FFFE       BL               ST7735_OutChar
   69 00000044 E7F7            B                ODout
   70 00000046         
   71 00000046 B001    done    ADD              SP, #4
   72 00000048         
   73 00000048 E8BD 4030       POP{LR,R4,       R5}
   74 0000004C         
   75 0000004C 4770            BX               LR
   76 0000004E         
   77 0000004E         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   78 0000004E         
   79 0000004E         ; -----------------------LCD _OutFix--------------------
                       --
   80 0000004E         ; Output characters to LCD display in fixed-point format
                       
   81 0000004E         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   82 0000004E         ; Inputs:  R0 is an unsigned 32-bit number
   83 0000004E         ; Outputs: none
   84 0000004E         ; E.g., R0=0,    then output "0.000 "
   85 0000004E         ;       R0=3,    then output "0.003 "
   86 0000004E         ;       R0=89,   then output "0.089 "
   87 0000004E         ;       R0=123,  then output "0.123 "
   88 0000004E         ;       R0=9999, then output "9.999 "
   89 0000004E         ;       R0>9999, then output "*.*** "
   90 0000004E         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   91 0000004E         
   92 0000004E         LCD_OutFix
   93 0000004E E92D 5030       PUSH             {R12,LR,R4,R5}
   94 00000052         



ARM Macro Assembler    Page 3 


   95 00000052 4684            MOV              R12, R0     ; 
   96 00000054         
   97 00000054 F04F 012A       LDR              R1,=star
   98 00000058 F04F 0405       MOV              R4,#5
   99 0000005C         ;MAKING THE STRING "*.***"
  100 0000005C 4A2E            LDR              R2,=string
  101 0000005E         putstr
  102 0000005E 7011            STRB             R1,[R2]     ;storing character 
                                                            
  103 00000060 F102 0201       ADD              R2,R2,#1
  104 00000064 2C05            CMP              R4,#5
  105 00000066 D103            BNE              next
  106 00000068 F04F 012E       LDR              R1,=dot
  107 0000006C 3C01            SUBS             R4,#1
  108 0000006E E7F6            B                putstr
  109 00000070 F04F 012A 
                       next    LDR              R1,=star
  110 00000074 3C01            SUBS             R4,#1
  111 00000076 D1F2            BNE              putstr
  112 00000078 F04F 0400       MOV              R4,#0
  113 0000007C 7014            STRB             R4,[R2]     ;writing null at th
                                                            e end of string 
  114 0000007E         
  115 0000007E B081            SUB              SP, #4      ; allocating space 
                                                            
  116 00000080 F04F 011E       MOV              R1, #30
  117 00000084 9100            STR              R1, [SP, #fixCnt]
  118 00000086         
  119 00000086 F242 730F       MOV              R3, #9999
  120 0000008A 4298            CMP              R0, R3
  121 0000008C D903            BLS              skip
  122 0000008E         
  123 0000008E         ;outputs default
  124 0000008E         
  125 0000008E 4822            LDR              R0,=string
  126 00000090 F7FF FFFE       BL               ST7735_OutString
  127 00000094 E03B            B                exit
  128 00000096         
  129 00000096         ;isolates the highest digit  
  130 00000096         skip
  131 00000096 F44F 737A       MOV              R3, #1000
  132 0000009A FBBC F1F3       UDIV             R1, R12, R3 ; R1= N/1000 
  133 0000009E         ;outputs 
  134 0000009E F101 0130       ADD              R1,#0x30    ;adding ASCII offse
                                                            t
  135 000000A2 4608            MOV              R0, R1
  136 000000A4 F7FF FFFE       BL               ST7735_OutChar
  137 000000A8         
  138 000000A8         ;outputs decimal
  139 000000A8 F04F 002E       LDR              R0,=dot
  140 000000AC F7FF FFFE       BL               ST7735_OutChar
  141 000000B0         
  142 000000B0 F44F 737A       MOV              R3, #1000
  143 000000B4 FBBC F1F3       UDIV             R1, R12, R3 ; R1= N/1000
  144 000000B8         ;isolate hundreds place
  145 000000B8 FB01 F103       MUL              R1, R1, R3  ; R1= N/1000*1000
  146 000000BC EBAC 0C01       SUB              R12, R12, R1 ;  R12= N- (N/1000
                                                            *1000) OR N%1000
  147 000000C0         



ARM Macro Assembler    Page 4 


  148 000000C0 F04F 0364       MOV              R3, #100
  149 000000C4 FBBC F1F3       UDIV             R1, R12, R3 ; R1= R12/100
  150 000000C8         ;outputs 
  151 000000C8 F101 0130       ADD              R1,#0x30    ;adding ASCII offse
                                                            t
  152 000000CC 4608            MOV              R0, R1
  153 000000CE F7FF FFFE       BL               ST7735_OutChar
  154 000000D2         
  155 000000D2 F04F 0364       MOV              R3, #100
  156 000000D6 FBBC F1F3       UDIV             R1, R12, R3 ; R1= R12/100
  157 000000DA         ;isolate tens place
  158 000000DA FB01 F103       MUL              R1, R1, R3  ; R1= N/100*100
  159 000000DE EBAC 0C01       SUB              R12, R12, R1 ;  R15= N- (N/100*
                                                            100) OR N%100
  160 000000E2         
  161 000000E2 F04F 030A       MOV              R3, #10
  162 000000E6 FBBC F1F3       UDIV             R1, R12, R3 ; R1= R12/10
  163 000000EA         ;outputs 
  164 000000EA F101 0130       ADD              R1,#0x30    ;adding ASCII offse
                                                            t
  165 000000EE 4608            MOV              R0, R1
  166 000000F0 F7FF FFFE       BL               ST7735_OutChar
  167 000000F4         
  168 000000F4 F04F 030A       MOV              R3, #10
  169 000000F8 FBBC F1F3       UDIV             R1, R12, R3 ; R1= R12/10
  170 000000FC         ;isolates ones place
  171 000000FC FB01 F103       MUL              R1, R1, R3  ; R1= N/10*10
  172 00000100 EBAC 0C01       SUB              R12, R12, R1 ;  R15= N- (N/10*1
                                                            0) OR N%10
  173 00000104         ;outputs 
  174 00000104 F10C 0C30       ADD              R12,#0x30   ;adding ASCII offse
                                                            t
  175 00000108 4660            MOV              R0, R12
  176 0000010A F7FF FFFE       BL               ST7735_OutChar
  177 0000010E         
  178 0000010E B001    exit    ADD              SP, #4
  179 00000110 E8BD 5030       POP              {R12,LR,R4,R5}
  180 00000114 4770            BX               LR
  181 00000116         
  182 00000116 00 00           ALIGN
  183 00000118         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  184 00000118         
  185 00000118                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  186 00000118                 END                          ; end of file
              20007000 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\print.
d -o.\print.o -I"C:\Users\Tara Kuruvilla\Desktop\ARM\RV31\INC" -I"C:\Users\Tara
 Kuruvilla\Desktop\ARM\CMSIS\Include" -I"C:\Users\Tara Kuruvilla\Desktop\ARM\In
c\Luminary" --predefine="__EVAL SETA 1" --list=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 24 in file Print.s
   Uses
      None
Comment: .text unused
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 34 in file Print.s
   Uses
      At line 19 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 0000004E

Symbol: LCD_OutFix
   Definitions
      At line 92 in file Print.s
   Uses
      At line 20 in file Print.s
Comment: LCD_OutFix used once
ODloop 0000001E

Symbol: ODloop
   Definitions
      At line 52 in file Print.s
   Uses
      At line 47 in file Print.s
      At line 60 in file Print.s

ODout 00000036

Symbol: ODout
   Definitions
      At line 63 in file Print.s
   Uses
      At line 59 in file Print.s
      At line 69 in file Print.s

done 00000046

Symbol: done
   Definitions
      At line 71 in file Print.s
   Uses
      At line 50 in file Print.s
      At line 65 in file Print.s

exit 0000010E

Symbol: exit
   Definitions
      At line 178 in file Print.s
   Uses
      At line 127 in file Print.s
Comment: exit used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

next 00000070

Symbol: next
   Definitions
      At line 109 in file Print.s
   Uses
      At line 105 in file Print.s
Comment: next used once
putstr 0000005E

Symbol: putstr
   Definitions
      At line 101 in file Print.s
   Uses
      At line 108 in file Print.s
      At line 111 in file Print.s

skip 00000096

Symbol: skip
   Definitions
      At line 130 in file Print.s
   Uses
      At line 121 in file Print.s
Comment: skip used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

counter 00000000

Symbol: counter
   Definitions
      At line 15 in file Print.s
   Uses
      None
Comment: counter unused
decCnt 00000000

Symbol: decCnt
   Definitions
      At line 11 in file Print.s
   Uses
      None
Comment: decCnt unused
dot 0000002E

Symbol: dot
   Definitions
      At line 14 in file Print.s
   Uses
      At line 106 in file Print.s
      At line 139 in file Print.s

fixCnt 00000000

Symbol: fixCnt
   Definitions
      At line 12 in file Print.s
   Uses
      At line 117 in file Print.s
Comment: fixCnt used once
star 0000002A

Symbol: star
   Definitions
      At line 13 in file Print.s
   Uses
      At line 97 in file Print.s
      At line 109 in file Print.s

string 20007000

Symbol: string
   Definitions
      At line 16 in file Print.s
   Uses
      At line 100 in file Print.s
      At line 125 in file Print.s

6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 17 in file Print.s
   Uses
      At line 49 in file Print.s
      At line 68 in file Print.s
      At line 136 in file Print.s
      At line 140 in file Print.s
      At line 153 in file Print.s
      At line 166 in file Print.s
      At line 176 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 18 in file Print.s
   Uses
      At line 126 in file Print.s
Comment: ST7735_OutString used once
2 symbols
351 symbols in table
